<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Prahlad Yeri's Blog - Open Source</title><link href="https://prahladyeri.github.io/" rel="alternate"></link><link href="https://prahladyeri.github.io/feeds/open-source.atom.xml" rel="self"></link><id>https://prahladyeri.github.io/</id><updated>2022-02-03T10:10:00+05:30</updated><subtitle>Educate and solve problems is my mantra. I'm skilled in web development and a quick learner, I also like blogging and contributing to open source.</subtitle><entry><title>Why I think "Sponsor Only" repositories introduced by Github is a terrible idea</title><link href="https://prahladyeri.github.io/blog/2022/02/why-i-think-sponsor-only-repositories-introduced-by-github-is-a-terrible-idea.html" rel="alternate"></link><published>2022-02-03T10:10:00+05:30</published><updated>2022-02-03T10:10:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:prahladyeri.github.io,2022-02-03:/blog/2022/02/why-i-think-sponsor-only-repositories-introduced-by-github-is-a-terrible-idea.html</id><summary type="html">&lt;p&gt;Today morning, I woke up to &lt;a href="https://twitter.com/TechCrunch/status/1488939271406948352"&gt;this dull news&lt;/a&gt; that Github is soon going to introduce "Sponsor Only" feature, which means the ability for an open source project to hide its source code from everyone except the one who sponsors them.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Code" src="/uploads/code-python.jpg"&gt;&lt;/p&gt;
&lt;p&gt;This incident shouldn't be taken in isolation but as …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Today morning, I woke up to &lt;a href="https://twitter.com/TechCrunch/status/1488939271406948352"&gt;this dull news&lt;/a&gt; that Github is soon going to introduce "Sponsor Only" feature, which means the ability for an open source project to hide its source code from everyone except the one who sponsors them.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Code" src="/uploads/code-python.jpg"&gt;&lt;/p&gt;
&lt;p&gt;This incident shouldn't be taken in isolation but as part of a larger trend. Few years ago, Medium also did a similar thing by allowing authors to monetize their articles. Quora followed suit too last year by prodding popular authors to sign up for their monetization program that involves putting their answers behind a walled garden.&lt;/p&gt;
&lt;p&gt;I don't even know where to begin on this. As I replied to the TechCrunch news tweet, I don't like this general direction the Internet is moving towards. There used to be a time when open source used to stand for something, it was all about the commons or the community. Commercial technology companies (and even society at large) used to look up to open source as a model of humanistic value to cherish and endeavor.&lt;/p&gt;
&lt;p&gt;This move is totally against the spirit of GPL/MIT/Apache licensed software which is all about openness and software freedom. In fact, both Stallmanists (FSF) and Open Source (OSI) camps are largely affected by this, so both should speak out vehemently against this. This is the time to forget your differences and unite against a common malady. Your definition of "freedom" and what constitutes it may differ, you both may have different ideologies, but here the very foundation of software freedom is being threatened with this "Sponsor Only" move.&lt;/p&gt;
&lt;p&gt;Now, I understand that putting food on the table should be a developer's primary concern, and there is nothing wrong in monetizing their efforts. But I strongly disagree with the "walled garden" approach many are taking for it, the same could be done by using more ethical means like advertising, affiliate marketing, repaying the sponsor in other terms (like putting out a brief marketing video for them on youtube as it's usually done).&lt;/p&gt;
&lt;p&gt;Meanwhile, I don't understand the very confusing and convoluted concept of "sponsor" here who wants the product all for himself! The wordnet dictionary defines sponsor as &lt;em&gt;"Someone who supports or champions something"&lt;/em&gt;. If one wants to sponsor a FOSS project, it's naturally assumed that they're interested in the open source or freedom friendly nature of that project too. If not, they should just stop doing the farce of this "sponsorship" and be direct in stating that they want to acquire or buy the project (for that is what they're effectively doing with this "Sponsor Only" move).&lt;/p&gt;
&lt;p&gt;I can understand an individual developer's or author's need for money and the need to put bread on their family table. But an institution like Quora or Github should rise above these things, they're the custodians of the legacy of today's Internet and all the content on it. Humans are fallible and corruptible, and that's exactly why we have institutions, even commercial ones have a code of ethics or conduct apparently. Quora could have easily thought of better ways of paying off their content creators than coming up with a program that lures them with money in return to putting their posts behind a paywall. What kind of nonsensical approach is this? Everyone starts somewhere in this world, and everyone isn't born with a silver spoon or the ability to pay for costly subscriptions. The pandemic has broken the financial backbone of many individuals as it is. This is the time to bring out the best of humanity inside us, not the worst.&lt;/p&gt;
&lt;p&gt;Imagine a world tomorrow where every single website or blog on the Internet is put behind a paywall, a world where money is the sole motivation to create content and the size of people's pockets determines what gets published. Do you like to live in such a world? Free thinking individuals who don't like to let that happen should speak out in loud voices against these moves, otherwise they'll only keep getting worse and worse.&lt;/p&gt;
&lt;p&gt;I also understand that &lt;em&gt;Capitalism vs Socialism&lt;/em&gt; is a never ending debate and there are all shades of grey on both sides. But I have a strong feeling that some endeavors like Medicine, Education and Open Source should exist in a realm where not money, but work ethics and human values are a motivator for doing things. Otherwise the result could be disastrous for the society as a whole.&lt;/p&gt;</content><category term="Github"></category><category term="Freedom"></category></entry><entry><title>Nobody likes standards anymore, everyone wants to create their own walled gardens</title><link href="https://prahladyeri.github.io/blog/2020/08/nobody-likes-standards-anymore-everyone-wants-to-create-their-own-walled-gardens.html" rel="alternate"></link><published>2020-08-04T11:10:00+05:30</published><updated>2020-08-04T11:10:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:prahladyeri.github.io,2020-08-04:/blog/2020/08/nobody-likes-standards-anymore-everyone-wants-to-create-their-own-walled-gardens.html</id><summary type="html">&lt;p&gt;Exactly three years ago, Mozilla had made 
&lt;a href="https://blog.mozilla.org/blog/2017/06/21/2-million-prize-decentralize-web-apply-today/"&gt;this wonderful blog post&lt;/a&gt; in which they solemnly announced a prize of $2 million to whoever comes up with a fully functional decentralized system. And while there have been some entries on the &lt;a href="https://wirelesschallenge.mozilla.org/"&gt;linked award website&lt;/a&gt;, none of them can be called fully …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Exactly three years ago, Mozilla had made 
&lt;a href="https://blog.mozilla.org/blog/2017/06/21/2-million-prize-decentralize-web-apply-today/"&gt;this wonderful blog post&lt;/a&gt; in which they solemnly announced a prize of $2 million to whoever comes up with a fully functional decentralized system. And while there have been some entries on the &lt;a href="https://wirelesschallenge.mozilla.org/"&gt;linked award website&lt;/a&gt;, none of them can be called fully functional decentralized systems, not even remotely. Most importantly, none of them solved any of the major problem domains where decentralization is truly needed today such as social networking and financial systems.&lt;/p&gt;
&lt;p&gt;&lt;img alt="LAN Switch" src="/uploads/lan-switch.jpg"&gt;&lt;/p&gt;
&lt;p&gt;This only goes on to show how hard or difficult it is to create decentralized systems in today's world. For true decentralization, many developers working on different projects should come on the same page and work toward building and implementing standards. But that hardly happens, right? There is a standard called &lt;a href="https://xmpp.org/"&gt;XMPP (Extensible Messaging and Presence Protocol)&lt;/a&gt; for building chat software but not a single major vendor follows that. Not even Google did for Hangouts, nor the other major messaging software of today's times like WhatsApp, Skype, Telegram, etc.&lt;/p&gt;
&lt;p&gt;Imagine what a wonderfully decentralized world it would be if a WhatsApp user was able to message a Skype or Telegram user by using their respective handles. That is a real possibility if all messaging clients were made XMPP compliant but no vendor seems to be wanting that, they just want to create and promote their own walled gardens. Shouldn't it be painfully apparent that implementing standards in existing software should be a win-win for everybody?&lt;/p&gt;
&lt;p&gt;Thus, one easy approach to solving the decentralization problem is simply to follow standards. If everyone starts following standards, decentralization starts getting built into the DNA. Decentralization then becomes natural, you don't need to make any special efforts for that. I think the problem of not following standards (and thus avoiding decentralization) can be directly linked to the ego problems of decision makers who own and maintain a software tool, their tendency to not give up control. Its not even linked to profit or financial interest because there is hardly a loss of profit when you follow standards, if anything the opposite should happen, you should gain financially.&lt;/p&gt;
&lt;p&gt;But there is also another thing which can explain the lack of interest in decentralization. Tools like WhatsApp and Skype don't earn any revenue directly from users, their revenue model involves collection of data from their tools and using it for analytics/marketing/advertising. Thus, the makers of these tools will always fear that with the coming of a decentralized alternative to their popular tool (powered by network effect), they might lose some of their user base to that other tool which doesn't collect data and follows the same standards as theirs. Its likely that this fear keeps them from opening up and decentralizing.&lt;/p&gt;
&lt;p&gt;Whatever be the case, I think the makers of various popular software tools (especially in problem domains where decentralization matters) should sit together and have a dialogue with each other. The good old technique of discussing a problem over a cup of tea can sometimes work wonders. If that happens and everyone starts following standards sincerely, we might see the age of decentralized web soon in our lifetimes. Remember, decentralization is the natural state, centralizing things by not following standards requires efforts and special case measures. All we must do is let go of those special case measures and just do what is natural and the problem will be solved!&lt;/p&gt;</content><category term="Mozilla"></category><category term="Internet"></category></entry><entry><title>Two years later, the reasons for Microsoft's Github acquisition still remain a mystery</title><link href="https://prahladyeri.github.io/blog/2020/07/two-years-later-github-acquisition-still-a-mystery.html" rel="alternate"></link><published>2020-07-28T12:30:00+05:30</published><updated>2020-07-28T12:30:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:prahladyeri.github.io,2020-07-28:/blog/2020/07/two-years-later-github-acquisition-still-a-mystery.html</id><summary type="html">&lt;p&gt;More than two years have passed since I shared my perspective on Microsoft's Github acquisition &lt;a href="/blog/2018/06/microsofts-github-acquisition-an-unbiased-perspective.html"&gt;in this blog post earlier&lt;/a&gt;, and the point still stands today. Why did Microsoft decide to acquire a startup company much smaller in size which had no viable and long term revenue/profit generation model …&lt;/p&gt;</summary><content type="html">&lt;p&gt;More than two years have passed since I shared my perspective on Microsoft's Github acquisition &lt;a href="/blog/2018/06/microsofts-github-acquisition-an-unbiased-perspective.html"&gt;in this blog post earlier&lt;/a&gt;, and the point still stands today. Why did Microsoft decide to acquire a startup company much smaller in size which had no viable and long term revenue/profit generation model?&lt;/p&gt;
&lt;p&gt;&lt;img alt="Github Logo" src="/uploads/github.png"&gt;&lt;/p&gt;
&lt;p&gt;If Microsoft wanted their team to use Github in their daily work-flow, there was hardly a need to acquire the whole company in a multi billion dollar deal. Github offered free private repositories even back then (and even their premium-tier subscription should have cost peanuts for Microsoft to get it for their entire staff!).&lt;/p&gt;
&lt;p&gt;If Microsoft wanted to sell it to enterprise clients, again much better and creative ways to do that. Brand Microsoft is several times more valuable than Brand Github in the enterprise world anyway. And those are the type of clients who would have already invested heavily in Microsoft stack, so something like Microsoft's Team Office would make a lot more sense for them than Github.&lt;/p&gt;
&lt;p&gt;What then could have been the reason? Its still unknown but that's probably true about Microsoft's &lt;a href="https://en.wikipedia.org/wiki/List_of_mergers_and_acquisitions_by_Microsoft"&gt;many other past acquisitions&lt;/a&gt; including Skype, Hotmail, Nokia and Linkedin. What exactly did Microsoft gain by each of these acquisitions? Arguably none in financial terms but perhaps that wasn't their motive at all. Perhaps they want to make a mark on the sands of time by owning some of the most popular artifacts of our times? That could also explain Microsoft getting themselves a costly seat on the board of Linux Foundation too.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Some &lt;a href="https://old.reddit.com/r/linux/comments/hzbru6/two_years_later_the_reasons_for_microsofts_github/"&gt;interesting perspectives from reddit&lt;/a&gt; about this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A few years ago I was at a conference ’Dev ops days' where Microsoft had a presence. The Microsoft speakers were part of Microsoft's Unix/Linux team's. MS speakers talked about MS investing millions into Open source as they see it as the future. Further they discussed their teams Git commits on open source projects.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;STAMINA comes to mind. A lot of "hack" code ends up on GitHub and occasionally the bits and pieces that can be turned into malware. I wouldn't be the least bit surprised if this is so they can use code as it appears to run through this and check code on the fly.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;Listen to this : https://twitter.com/i/broadcasts/1OyKAYWPRrWKb Especially the bit where their AI is able to code. Any guesses how it learnt that?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;Seems a bit of a stretch to buy GitHub to train a coding AI, MS do have access internally to several decades worth of code, and of course it's pretty simple to scrape code for free from all manner of open source projects and Github.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;A big part of the code of the projects at Github is freely accessible. Therefore, in my opinion, Microsoft would not have had to buy Github to train the AI.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;They are developing VS Code and MS Terminal on github with the github community. They wanted to secure the platform so no one could "take" it, or make it difficult for them. (Edit: it = the platform and access to the community)&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="Github"></category><category term="Gitlab"></category><category term="Linux"></category><category term="Microsoft"></category></entry><entry><title>Open Source vs Free Software is a bit like Socialist vs Communist</title><link href="https://prahladyeri.github.io/blog/2018/07/open-source-vs-free-software-is-a-bit-like-socialist-vs-communist.html" rel="alternate"></link><published>2018-07-03T16:57:00+05:30</published><updated>2018-07-03T16:57:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:prahladyeri.github.io,2018-07-03:/blog/2018/07/open-source-vs-free-software-is-a-bit-like-socialist-vs-communist.html</id><summary type="html">&lt;p&gt;Socialism and Communism have a lot in common, both ideologies aim to bring an equilibrium and welfare in the society by removing the income inequality between the rich and the poor. However, how they both go about doing their business is what makes the difference between sky and earth. Whilst …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Socialism and Communism have a lot in common, both ideologies aim to bring an equilibrium and welfare in the society by removing the income inequality between the rich and the poor. However, how they both go about doing their business is what makes the difference between sky and earth. Whilst Communism does advocate the use of &lt;strong&gt;force&lt;/strong&gt; to achieve its aim, Socialism does not and that's the major difference of spirit between them. If you remove this force element, you'll in fact find that they are both pretty much the same thing with only technical differences here and there.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="pexels-photo-273691" class="alignnone wp-image-903 size-medium" height="199" src="/uploads/2018/07/pexels-photo-273691-300x199.jpeg" width="300"&gt;&lt;/p&gt;
&lt;p&gt;Coming to the world of software, its a similar case when it comes to GPL (free software or copyleft) and non-GPL (open source or liberal) variety of FOSS licenses. The &lt;a href="https://www.gnu.org/licenses/old-licenses/gpl-2.0.txt"&gt;GNU GPL&lt;/a&gt; forces their ideology upon the user of the software by expressly restricting him/her to the kind of use cases permitted on the said software:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt; To protect your rights, we need to make restrictions that forbid
anyone to deny you these rights or to ask you to surrender the rights.
These restrictions translate to certain responsibilities for you if you
distribute copies of the software, or if you modify it.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This restriction or force factor is what makes GPL or LGPL less desirable than the other more liberal (also called "open source") licenses, just as the communist ideology is less desirable than socialist ideology by most people.&lt;/p&gt;
&lt;p&gt;On the other hand, consider a liberal open source license such as the &lt;a href="https://opensource.org/licenses/MIT"&gt;MIT license&lt;/a&gt;. This license doesn't force anything on how the software may be used by the user (except that the license header itself carrying the name of the author should be passed around with any distributed copies):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &amp;quot;Software&amp;quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;They may use it in any kind of use cases they please, even include it in a closed source or proprietary software if they want. Similar is the case with other open source licenses such as the &lt;a href="https://opensource.org/licenses/BSD-3-Clause"&gt;BSD Modified license&lt;/a&gt;or the &lt;a href="https://opensource.org/licenses/Apache-2.0"&gt;Apache 2 license&lt;/a&gt;. None of these licenses force their users into any kind of restrictions, which is probably why they are more popular and used than the copyleft variety of licenses today.&lt;/p&gt;
&lt;p&gt;Finally, coming to the point of contrast between the copyleft and open source licenses, you'll find that they are all ultimately trying to achieve more or less the same goal, though some would strive for an excellence methodology in software development while others would term it as a struggle for users' freedom depending on what viewpoint you choose to look at it.&lt;/p&gt;
&lt;p&gt;Now, the reasons for GPL restrictions and &lt;a href="https://www.fsf.org/"&gt;their ideology&lt;/a&gt; are quite understandable, but the way they go about implementing it is certainly not ideal from a practical standpoint. &lt;a href="https://stallman.org/"&gt;Stallman's approach&lt;/a&gt; of making copyleft software unusable when linked with non-GPL or proprietary code is like a child's tit-for-tat attitude. Just as proprietary software companies won't let you use their software without a license and make it unapproachable to those who don't have it, Stallman wants to make the GPL world unapproachable to the proprietary companies by making this restriction on mixing GPL with proprietary code. In a perfect world (consisting of mostly power users who would rather visit support forums and do their own builds than use proprietary software), this may have worked wonders to Stallman's cause, but unfortunately we don't live in such a perfect world!&lt;/p&gt;
&lt;p&gt;On the other hand, the open source or liberal licenses that don't put any restrictions on its usage serve the purpose of everyone and so everyone is happy and thrives in this world. Power users are happy because they no longer have to use privacy invasive and/or bloated proprietary software as they can compile their own builds or even visit support forums or issue trackers of various open source projects if required. On the other hand, proprietary software companies are also happy as they get to use the fruits (source code) of open source contributors without spending anything on their part. Of course, taking the moral cognizance of these fruits, many of them also do tend to contribute back by either financially supporting other open source projects or releasing their in-house developed source code as open source to the world at large. There are several examples of these such as Microsoft's &lt;a href="https://code.visualstudio.com/"&gt;Visual Studio Code&lt;/a&gt;, Adobe's code editor called &lt;a href="http://brackets.io/"&gt;Brackets.io&lt;/a&gt;, Apple's &lt;a href="https://developer.apple.com/swift/"&gt;Swift&lt;/a&gt;, etc. Now, consider that in a Richard Stallman's "pureland GPL" world, we wouldn't have all these contributions back from the proprietary companies!&lt;/p&gt;</content><category term="Libre Software"></category><category term="Open Source"></category></entry><entry><title>People migrating from Github to Gitlab should learn about these details first</title><link href="https://prahladyeri.github.io/blog/2018/06/people-migrating-from-github-to-gitlab-should-learn-about-these-details-first.html" rel="alternate"></link><published>2018-06-11T14:37:00+05:30</published><updated>2018-06-11T14:37:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:prahladyeri.github.io,2018-06-11:/blog/2018/06/people-migrating-from-github-to-gitlab-should-learn-about-these-details-first.html</id><summary type="html">&lt;p&gt;After &lt;a href="https://prahladyeri.github.io/blog/2018/06/microsofts-github-acquisition-an-unbiased-perspective.html"&gt;Microsoft's recent acquisition of Github&lt;/a&gt;, a mass exodus has kind of begun and many small and large projects are moving their code bases to the much hyped &lt;a href="https://gitlab.com/"&gt;Gitlab&lt;/a&gt; in a hurry, and these include both open and closed source projects. However, before migrating to Gitlab, they should take a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;After &lt;a href="https://prahladyeri.github.io/blog/2018/06/microsofts-github-acquisition-an-unbiased-perspective.html"&gt;Microsoft's recent acquisition of Github&lt;/a&gt;, a mass exodus has kind of begun and many small and large projects are moving their code bases to the much hyped &lt;a href="https://gitlab.com/"&gt;Gitlab&lt;/a&gt; in a hurry, and these include both open and closed source projects. However, before migrating to Gitlab, they should take a pause and learn something about Gitlab and consider evaluating other alternatives too.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Gitlab Stack" class="size-full wp-image-644" height="605" src="/uploads/2018/06/gitlab_stack.png" width="692"&gt; &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Gitlab Stack&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;According to above &lt;a href="https://stackshare.io/gitlab/gitlab"&gt;StackShare.io chart&lt;/a&gt;, Gitlab basically runs on Microsoft Azure cloud hosting facility. So, if you are leaving Github in order to escape the clutches of Microsoft, then you are headed to a totally wrong place! Microsoft is exactly the place where your source code will reside in this case, only difference is that instead of controlling it directly (as in the case of Github), Microsoft will be controlling your code only technically.&lt;/p&gt;
&lt;p&gt;I know, some of you will be saying that you are self-hosting an open source copy of Gitlab and not actually moving to &lt;a href="https://gitlab.com"&gt;Gitlab.com&lt;/a&gt;. In that case, please have a look at another item in that stack, namely Rails (RoR or Ruby on Rails framework).&lt;/p&gt;
&lt;p&gt;Though Rails is a great framework that developers enjoy to code with, its a performance hog when it comes to actually running on production! There is a reason why &lt;a href="https://jaredfriedman.wordpress.com/2015/09/15/why-i-wouldnt-use-rails-for-a-new-company/"&gt;Twitter ditched Rails&lt;/a&gt; in favor of Node.js instead of fixing the interpreter like Facebook did with PHP. Apart from Rails being a performance hog, consider that a git hosting facility is not a simple CRUD app. Its very difficult to do advanced things like CI/CD right in a framework like Rails and the effect is showing. It may work out initially, but once your code base starts to increase and your integrations start to scale, you'll hit the RoR scaling limit sooner or later, like &lt;a href="https://serverfault.com/questions/818489/gitlab-extremely-high-memory-consumption-by-ruby-bundle-process"&gt;many others have&lt;/a&gt;. Its not uncommon for Gitlab to eat gigabytes of your RAM or consume 100% CPU. So, if you are trying to host Gitlab in a small Digital Ocean droplet or Amazon AWS Micro instance, you can just forget about it!&lt;/p&gt;
&lt;p&gt;Or, you can sit back and evaluate your options, it really depends on what you basically want. If you just want a free git hosting facility and don't want to self-host, there is already Github. If you don't like Microsoft, then you have Bitbucket, SourceForge, &lt;a href="http://salsa.debian.org/"&gt;Debian Salsa&lt;/a&gt; and others too apart from Gitlab, so consider those options too before blindly deciding on Gitlab and falling for their marketing trap.&lt;/p&gt;
&lt;p&gt;On the other hand, if you are ready to self-host and have a smaller budget (just for an AWS Micro or Digital Ocean droplet, for instance), then you can use one of the several open source and light-weight git hosting software like &lt;a href="https://try.gogs.io/"&gt;gogs&lt;/a&gt;, &lt;a href="https://try.gitea.io/"&gt;gitea&lt;/a&gt;, &lt;a href="https://github.com/phacility/phabricator"&gt;phabricator&lt;/a&gt; and many others and self-host.&lt;/p&gt;
&lt;p&gt;Finally, if you have a budget for hosting Gitlab on a larger instance (like AWS Large instance or 2GB droplet from Digital Ocean), then the first question I'd ask you is why not just stick to paid hosting plans of Github (or Gitlab/Bitbucket if you don't like Microsoft). That will be a lot cheaper and lenient on your pockets than self hosting a copy of Gitlab on a larger instance.&lt;/p&gt;
&lt;p&gt;Whatever route you end up choosing, it should be a calmly taken logical decision after due consideration to all facts, not in this Github acquisition frenzy. All the best.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Links:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://prahladyeri.github.io/blog/2018/06/microsofts-github-acquisition-an-unbiased-perspective.html"&gt;https://prahladyeri.github.io/blog/2018/06/microsofts-github-acquisition-an-unbiased-perspective.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackshare.io/gitlab/gitlab"&gt;https://stackshare.io/gitlab/gitlab&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gitlab.com"&gt;https://gitlab.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaredfriedman.wordpress.com/2015/09/15/why-i-wouldnt-use-rails-for-a-new-company/"&gt;https://jaredfriedman.wordpress.com/2015/09/15/why-i-wouldnt-use-rails-for-a-new-company/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://serverfault.com/questions/818489/gitlab-extremely-high-memory-consumption-by-ruby-bundle-process"&gt;https://serverfault.com/questions/818489/gitlab-extremely-high-memory-consumption-by-ruby-bundle-process&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://news.ycombinator.com/item?id=10235446"&gt;https://news.ycombinator.com/item?id=10235446&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/osldev-blog/our-first-eight-months-with-gitlab-2f447af92e50"&gt;https://medium.com/osldev-blog/our-first-eight-months-with-gitlab-2f447af92e50&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://salsa.debian.org/"&gt;http://salsa.debian.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://try.gogs.io/"&gt;https://try.gogs.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://try.gitea.io/"&gt;https://try.gitea.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/phacility/phabricator"&gt;https://github.com/phacility/phabricator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Git"></category><category term="Github"></category><category term="Gitlab"></category><category term="Microsoft"></category><category term="Open Source"></category></entry><entry><title>Microsoft's Github acquisition - A perspective</title><link href="https://prahladyeri.github.io/blog/2018/06/microsofts-github-acquisition-an-unbiased-perspective.html" rel="alternate"></link><published>2018-06-08T17:04:00+05:30</published><updated>2018-06-08T17:04:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:prahladyeri.github.io,2018-06-08:/blog/2018/06/microsofts-github-acquisition-an-unbiased-perspective.html</id><summary type="html">&lt;p&gt;As someone who has worked on Microsoft tooling since the days of Foxpro 2.6 to Visual Studio 2010 in IT career, and yet ditched them all for PHP, Python and open source years later, I think I am qualified to offer a somewhat neutral or objective perspective on this …&lt;/p&gt;</summary><content type="html">&lt;p&gt;As someone who has worked on Microsoft tooling since the days of Foxpro 2.6 to Visual Studio 2010 in IT career, and yet ditched them all for PHP, Python and open source years later, I think I am qualified to offer a somewhat neutral or objective perspective on this acquisition.&lt;/p&gt;
&lt;p&gt;When this news was &lt;strong&gt;&lt;a href="https://www.businessinsider.in/Microsoft-has-been-talking-about-buying-GitHub-a-startup-at-the-center-of-the-software-world-last-valued-at-2-billion/articleshow/64420905.cms"&gt;first announced on last Friday&lt;/a&gt;&lt;/strong&gt;, I was naturally puzzled and so were a lot of other developers and not without reasons. The way this was initially announced without any clarification about what they were going to do with the hosting facility in future, speculations were bound to be raised and people were bound to be pissed off, especially given Microsoft's history of being "not so friendly" with open source and "not so good" with some acquisitions.&lt;/p&gt;
&lt;p&gt;When it comes to open source, the Linux subreddit is the place where developers pour their hearts out and &lt;a href="https://www.reddit.com/r/linux/comments/8nukfa/microsoft_and_github_have_held_acquisition_talks/"&gt;this particular thread&lt;/a&gt; quite summed up  their initial knee-jerk reaction. As the most upvoted comment says:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;its like Microsoft is obsessed with generating as much frustration in the world as possible&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Other reactions were also quite similar:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I LOL'ed.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;First, Sourceforge started to install malware on the open source projects. So everyone run to Github. Now, Github might get owned by Microsoft. Not to mention Github is 100% closed source. &lt;strong&gt;Gitlab&lt;/strong&gt; looks good every day. There are other open source git solution too.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://gitlab.com/"&gt;&lt;strong&gt;GitLab&lt;/strong&gt;&lt;/a&gt;, the top open source competitor to Github soon became the most discussed alternative (apparently, their marketing team did their bit too with the perfect timing!). And so, a mass exodus of projects soon began, which not only became the most discussed topic on reddit, but also caught a &lt;a href="https://www.reuters.com/article/us-github-microsoft-gitlab/gitlab-gains-developers-after-microsoft-buys-rival-github-idUSKCN1J12BR"&gt;lot of media attention too&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Just within a couple of days from this announcement, some &lt;a href="https://motherboard.vice.com/en_us/article/ywen8x/13000-projects-ditched-github-for-gitlab-monday-morning"&gt;13,000 projects had already migrated to Gitlab&lt;/a&gt; which included some prominent names. Naturally, it was time now for Microsoft to do some damage control. But if their PR team was any wiser, they should have already anticipated this and this damage control move should have been done at the outset as the first thing. How could they not expect this backlash considering Microsoft's past history with open source (however distant it may be)?&lt;/p&gt;
&lt;p&gt;The first move came when Satya Nadella, the Microsoft CEO gave an interview to CNBC on Monday (4th June):&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/m164XggdRGA" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;One of the most important things Satya said in the interview was that Microsoft is a &lt;strong&gt;&lt;em&gt;developer tooling&lt;/em&gt;* &lt;/strong&gt;company at core*** (let's ignore Windows and Office for a moment!). However, most developers still had concerns, they wanted to know how this high level strategy of being open source developer friendly will turn out to be in practice.&lt;/p&gt;
&lt;p&gt;Most importantly, they needed an assurance that their daily driver for source control isn't going to be integrated and hijacked by other Microsoft products like Skype, Linkedin or even a Passport account. And that assurance came yesterday from &lt;a href="https://en.wikipedia.org/wiki/Nat_Friedman"&gt;Nat Friedman&lt;/a&gt;, the future CEO of Github &lt;a href="https://www.reddit.com/r/AMA/comments/8pc8mf/im_nat_friedman_future_ceo_of_github_ama/"&gt;in his Reddit AMA&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Firstly, the fact that Github Inc. was going in the hands of an open source veteran who had contributed to GNOME and MONO projects in the past was itself quite reassuring. At least, Github isn't going to be controlled by a typical corporate honcho who has nothing but shareholders' interests in mind! &lt;a href="https://www.reddit.com/r/AMA/comments/8pc8mf/im_nat_friedman_future_ceo_of_github_ama/e0a5e3r/"&gt;Nat assured most redditors&lt;/a&gt; that Github is going to stay as it is, its developer focus is not going to be shifted, nor is it going to be integrated with any other products. And most importantly, they will never require a Microsoft account to login to Github, rather, their other products might consider allowing a Github user to authenticate to their systems in future:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We love GitHub login. Your GitHub account is your developer identity, and many users are accustomed to signing into developer tools and services (e.g. Travis, Circle) with their GitHub accounts. So, if anything, we may decide to add GitHub as a login option to Microsoft.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Nat also &lt;a href="https://www.reddit.com/r/AMA/comments/8pc8mf/im_nat_friedman_future_ceo_of_github_ama/e0a6eh1/"&gt;goes on to further assure&lt;/a&gt; redditors in the AMA that they will always remain a "developer first" company, and are keen to learn a lot from Github from this acquisition. Rather than impose their own work culture on Github, they'll be taking lessons from Github and try and be like them:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We bought GitHub because we appreciate how special it is. That's why we have two principles for this acquisition going forward:&lt;/p&gt;
&lt;p&gt;Developers first. We will evaluate every decision through the lens of what is best for developers. This includes GitHub's status as an open platform with open APIs that any developer can use to extend GitHub's functionality. And it includes our commitment that we will support developers on GitHub in their use of any language, any license, any operating system, any device, and any cloud.&lt;/p&gt;
&lt;p&gt;Independence. We are not buying GitHub to turn it into Microsoft; we are buying GitHub because we believe in the importance of developers, and in GitHub's unique role in the developer community. Our goal is to help GitHub be better at being GitHub, and if anything, to help Microsoft be a little more like GitHub.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;All in all, this damage control or whatever Microsoft has done seems to have done the magic at least for the moment. People and projects seem to have stopped their exodus to Gitlab, though its difficult to say what could happen in the long term.&lt;/p&gt;</content><category term="Github"></category><category term="Gitlab"></category><category term="Linux"></category><category term="Microsoft"></category></entry><entry><title>Is Sourceforge.net safe anymore to download software</title><link href="https://prahladyeri.github.io/blog/2015/06/is-sourceforge-safe-anymore.html" rel="alternate"></link><published>2015-06-25T21:36:00+05:30</published><updated>2015-06-25T21:36:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:prahladyeri.github.io,2015-06-25:/blog/2015/06/is-sourceforge-safe-anymore.html</id><summary type="html">&lt;p&gt;You have probably heard about all the recent buzz surrounding the sourceforge.net website hosting adware/malware bundled installers and naive users falling prey to it. In some cases, SF even actively took control of &lt;a href="http://arstechnica.com/information-technology/2015/05/sourceforge-grabs-gimp-for-windows-account-wraps-installer-in-bundle-pushing-adware/"&gt;abandoned developer accounts&lt;/a&gt;. to bundle their crapware.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Sourceforge Logo" src="/uploads/old/sf-logo.png"&gt;&lt;/p&gt;
&lt;p&gt;So, is it safe anymore to go to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;You have probably heard about all the recent buzz surrounding the sourceforge.net website hosting adware/malware bundled installers and naive users falling prey to it. In some cases, SF even actively took control of &lt;a href="http://arstechnica.com/information-technology/2015/05/sourceforge-grabs-gimp-for-windows-account-wraps-installer-in-bundle-pushing-adware/"&gt;abandoned developer accounts&lt;/a&gt;. to bundle their crapware.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Sourceforge Logo" src="/uploads/old/sf-logo.png"&gt;&lt;/p&gt;
&lt;p&gt;So, is it safe anymore to go to this site and download your favorite FLOSS software? The TLDR version is NO, unless you happen to trust the developer and the project is actively being developed by them. But to understand the big picture, you will have to see the root cause of this which goes much deeper than just sourceforge, and relates to software distribution practices in the Microsoft Windows world.&lt;/p&gt;
&lt;h2&gt;What went wrong?&lt;/h2&gt;
&lt;p&gt;Software Development consists of two important phases: Authoring of source code, and secondly, the build process where the code is compiled to binaries and bundled into installable packages that you may download. Many years ago, sourceforge was one of the rare sites that provided a place on the internet where open source developers can host their code and binaries, and users can download them. This used to go well for many years and thus sourceforge gained a nice reputation in the FLOSS Community.&lt;/p&gt;
&lt;p&gt;But soon enough, Sourceforge decided to cash in on this reputation by breaching this trust. And they started bundling adware and crapware to the developer builds. In some cases, &lt;a href="https://forum.filezilla-project.org/viewtopic.php?t=30240"&gt;the lead developers&lt;/a&gt; were in cohorts with Sourceforge. And as &lt;a href="http://www.thewindowsclub.com/safe-software-download-sites"&gt;this Windows Club article&lt;/a&gt; succintly explains, Sourceforge wasn’t alone in this. There were many othere like CNET.com, Download.com, etc.&lt;/p&gt;
&lt;h2&gt;The Problem&lt;/h2&gt;
&lt;p&gt;Though the adware bundling is optional in theory, the default options are so tactfully placed that only the shrewdest of hackers can dodge all of them! Though this kind of behavior is sort of expected from B-grade sites like CNET and download.com, Sourceforge was something that the open source community held in high esteem. Though most of the developers have moved to github now, souceforge was once considered the Jerusalem for downloading FLOSS Software, especially Windows Software. Even today, their interface is the best suited for novice users who are just looking for a big green download button to click - Github interface is more geared towards developers and generally overwhelms them. But now that the Jerusalem folks have turned into heretics (for lack of a better analogy), what are our options?&lt;/p&gt;
&lt;p&gt;The best option is to get it from the developer’s site itself if they provide it. But sometimes that’s not possible as the developer may not always have bandwidth to host the binaries, and we have to depend on 3rd party sites like sourceforge. As the author of the linked article suggests, &lt;a href="http://majorgeeks.com"&gt;MajorGeeks&lt;/a&gt; and &lt;a href="http://softpedia.com"&gt;Softpedia&lt;/a&gt; are generally clean in my experience. Downloading software from those cleaner sites, however, is just a workaround and doesn’t solve the larger structural problem of Software Distribution in Windows world. So, what is that solution?&lt;/p&gt;
&lt;h2&gt;The Linux Solution!&lt;/h2&gt;
&lt;p&gt;One crisis we are facing in the Windows FLOSS world right now is the Middleman problem. The original developer (A) writes some code and compiles it, the middleman (SF) bundles adware to it and makes a quick buck, whilst an innocent user (B) clicks that download link. Since there is no way for B to verify if the package is actually bundled by A, SF continues to get his commissions.&lt;/p&gt;
&lt;p&gt;But what if there was a way for B to verify if the package is actually signed by A? In the Linux world, we do have such a mechanism, so there is no place for middlemen to make a profit there. If I download GNU Emacs from the &lt;a href="http://ftp.gnu.org/gnu/emacs/"&gt;GNU ftp server&lt;/a&gt;, all I have to do is &lt;code class="highlighter-rouge"&gt;gpg --verify emacs.sig emacs.tar.gz&lt;/code&gt; and the system will tell me whether my emacs copy is signed by developers of Emacs, or was it tampered with for injecting any malware!&lt;/p&gt;
&lt;p&gt;The second crisis the Windows FLOSS is facing is lack of a decent package management system. In above analogy, we can’t expect B to personally verify each downloaded software against A’s signature, s/he needs a good package manager that downloads the package from a trusted server and installs it afer verifying the signatures.&lt;/p&gt;
&lt;p&gt;In Linux world, we have two major packaging systems known by the name of &lt;code class="highlighter-rouge"&gt;apt&lt;/code&gt; and &lt;code class="highlighter-rouge"&gt;yum&lt;/code&gt;. How are they better, stable and secure than the Windows approach of users downloading arbitrary installers from SF-like sites and installing them, is something beyond the scope of this article. But suffice it to say that its very very high time that Windows gets a similar package manager to take care of the present structural issues surrounding it. &lt;a href="http://www.ninite.com/"&gt;Ninite&lt;/a&gt; has tried to do something in this direction, but its a proprietary and paid solution. We need open source and something that everyone accepts as a standard. Maybe, perhaps Microsoft will take the initiative and do it themselves? Only time will tell.&lt;/p&gt;</content><category term="Sourceforge"></category></entry></feed>